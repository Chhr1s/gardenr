% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitting_functions.R
\name{cross_validate_it_dichot}
\alias{cross_validate_it_dichot}
\title{fit \code{glmertree()} to a cross-validated data set. For dichotomous outcomes.}
\usage{
cross_validate_it_dichot(cv_obj, mod_formula, tuning_grid = NULL)
}
\arguments{
\item{cv_obj}{vfold_cv—a v-fold cross-validated dataset from \code{rsample::vfold_cv()}}

\item{mod_formula}{Formula—made from \code{as.Formula()}. uppercase required \verb{:)}}

\item{tuning_grid}{— either tuning grid e.g., from \code{dials::grid_max_entropy()} or default grid (when \code{tuning_grid = NULL}).}

\item{seed}{integer—starting seed}

\item{...}{additional arguments to be passed to \code{glmertree()}}
}
\value{
tibble—fit statistics (rmse, mae) for object
}
\description{
fit \code{glmertree()} to a cross-validated data set. For dichotomous outcomes.
}
\examples{
dat <- sim_multilevel()
example_split <- rsample::initial_split(dat)
example_train <- rsample::training(example_split)
example_test  <-  rsample::testing(example_split)
cv <- rsample::vfold_cv(data = example_train, v = 10)

ex_formula <-
   Formula::as.Formula(
      'outcome ~ small_1 |
      (1 | id_vector) |
      small_c_1 + small_c_2 + nuisance_1a + nuisance_c_1a'
      )

tuning_grid <-
  dials::grid_max_entropy(
    maxdepth_par(maxdepth_min = 0L, maxdepth_max = 20L),
    alpha_par(alpha_min = 0.10, alpha_max = 0.001),
    trim_par(trim_min = 0.01, trim_max = 0.5),
    size = 10
  )

fitted <-
   cross_validate_it_dichot(
      cv_obj = cv,
      seed = 713,
      tuning_grid = tuning_grid,
      mod_formula = ex_formula
      )
}
